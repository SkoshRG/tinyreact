{"version":3,"sources":["tinyreact.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["/**\n * TinyReact - a TINY implementation of React. Used by MCMS to render admin\n * dashboard pages dynamically.\n */\n\nexport interface PropType {\n  children: HTMLElement | Promise<any> | string | number;\n};\n\nexport interface ElementType {\n  tag: string;\n  props: any;\n}\n\nexport type SetStateFunction = (newState: any) => void;\nexport type TemplateSetStateFunction<T> = (newState: T) => void;\n// TODO: Implement previousState? Might be important for checking for changes\n// type SetStateFunction = (newState: any, previousState: any) => void;\n\nexport type StateReturnType = [any, SetStateFunction];\nexport type TemplateStateReturnType<T> = [T, TemplateSetStateFunction<T>];\n\nexport type RenderElementType = ElementType | Function | Promise<any> | string | number;\n\nexport interface ReactHTMLElement extends HTMLElement {\n  [index: string]: any;\n}\n\nexport const React = {\n  createElement: (tag: string | Function, props: PropType, ...children: PropType[]): ElementType => {\n    if (typeof tag === 'function') { return tag(props); }\n    const element: ElementType = {tag, props: {...props, children}};\n    return element;\n  }\n}\n\nexport class TinyReact {\n  // The state can contain any datatype.\n  private static states: any[] = [];\n  private static stateCursor: number = 0;\n  \n  private static componentFunction: Function;\n  private static container: HTMLElement;\n\n  public static async render(reactElement: RenderElementType, container: HTMLElement | null) {\n    if (!container) {\n      throw Error(`Container passed to TinyReact.render() is null. Make sure you pass an HTMLElement that has exists in the DOM.`);\n    }\n    if (!this.componentFunction && typeof reactElement === 'function') this.componentFunction = reactElement;\n    if (!this.container) this.container = container;\n\n    reactElement = typeof reactElement === 'function' ? reactElement() : reactElement;\n\n    if (['string', 'number'].includes(typeof reactElement)) {\n      container.appendChild(document.createTextNode(String(reactElement)));\n      return;\n    }\n  \n    // If reactElement is a Promise, await it\n    if (reactElement instanceof Promise) {\n      // Await reactElement, to get the actual element with all Promises resolved\n      const awaitedElement = await reactElement;\n      if (typeof awaitedElement === 'object') {\n        // Render Async/await component\n        this.render(awaitedElement, container);\n        return;\n      } else if (typeof awaitedElement === 'string') {\n        // Render element that contains a Promise\n        container.appendChild(document.createTextNode(String(await reactElement)));\n        return;\n      }\n    }\n\n    if (this.isReactElement(reactElement)) {\n      // const domElement: HTMLElement = document.createElement(reactElement.tag);\n      const domElement: ReactHTMLElement = document.createElement(reactElement.tag) as ReactHTMLElement;\n      if (reactElement.props) {\n        // Object.keys(reactElement.props).filter(p => p !== 'children').forEach(p => domElement[p] = reactElement.props[p]);\n        Object.keys(reactElement.props).filter(p => p !== 'children').forEach(async p => {\n          // Type checking for type safety\n          if (this.isReactElement(reactElement)) {\n            if (typeof reactElement.props[p].then === 'function') {\n              return domElement[p] = await reactElement.props[p]; // Await Promise\n            }\n            return domElement[p] = reactElement.props[p];\n          } else {\n            throw Error(`${reactElement} is not of type 'ElementType' for some reasson.`);\n          }\n        });\n      }\n      if (reactElement.props.children) {\n        // Render children recursively\n        reactElement.props.children.forEach((child: RenderElementType) => {\n          return this.render(child, domElement);\n        });\n        // reactElement.props.children.forEach(child => this.render(child, domElement));\n      }\n\n      // Remove old content if it exists\n      if (this.container.firstChild) {\n        this.container.firstChild.remove();\n      }\n      // Append new content\n      container.appendChild(domElement);\n    } else {\n      throw Error(`${reactElement} is not of type 'ElementType' for some reasson.`);\n    }\n  }\n\n  // TODO(SkoshRG): Test that useState & useStateTemplate can be used interchangeably\n  public static useStateTemplate<T>(initialState: T): TemplateStateReturnType<T> {\n    const FROZENCURSOR: number = this.stateCursor;\n    this.states[FROZENCURSOR] = this.states[FROZENCURSOR] || initialState;\n    const setState = (newState: T) => {\n      this.states[FROZENCURSOR] = newState;\n      this.rerender();\n    };\n    this.stateCursor++;\n    return [this.states[FROZENCURSOR], setState];\n  }\n\n  public static useState(initialState: any): StateReturnType {\n    const FROZENCURSOR: number = this.stateCursor;\n    this.states[FROZENCURSOR] = this.states[FROZENCURSOR] || initialState;\n    const setState = (newState: any) => {\n      this.states[FROZENCURSOR] = newState;\n      this.rerender();\n    };\n    this.stateCursor++;\n    return [this.states[FROZENCURSOR], setState];\n  }\n\n  private static async rerender(): Promise<void> {\n    this.stateCursor = 0;\n    this.render(this.componentFunction, this.container);\n  }\n\n  private static isReactElement(reactElement: RenderElementType): reactElement is ElementType {\n    return (!['string', 'number', 'function'].includes(typeof reactElement))\n      && !(reactElement instanceof Promise)\n      && (reactElement as ElementType).tag !== undefined;\n  }\n}","export { TinyReact } from './tinyreact';\n\n// State functions & return types\nexport { SetStateFunction, TemplateSetStateFunction, StateReturnType, TemplateStateReturnType} from './tinyreact';\n\n// Prop types & element types\nexport { PropType, ElementType } from './tinyreact';\n\n// RenderElement, ReactHTMLElement & React\nexport { RenderElementType, ReactHTMLElement, React } from './tinyreact';"]}